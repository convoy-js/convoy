{
  "root": "examples/kafka",
  "sourceRoot": "examples/kafka/src",
  "projectType": "application",
  "targets": {
    "build": {
      "executor": "@nrwl/node:webpack",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/examples/kafka",
        "main": "examples/kafka/src/main.ts",
        "tsConfig": "examples/kafka/tsconfig.app.json",
        "assets": ["examples/kafka/src/assets"],
        "webpackConfig": "examples/kafka/webpack.config.js"
      },
      "configurations": {
        "production": {
          "optimization": true,
          "extractLicenses": true,
          "inspect": false,
          "fileReplacements": [
            {
              "replace": "examples/kafka/src/environments/environment.ts",
              "with": "examples/kafka/src/environments/environment.prod.ts"
            }
          ]
        }
      }
    },
    "serve": {
      "executor": "@nrwl/node:node",
      "options": {
        "buildTarget": "examples-kafka:build",
        "args": ["server:start"],
        "waitUntilTargets": ["examples-kafka:docker-compose"]
      }
    },
    "lint": {
      "executor": "@nrwl/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["examples/kafka/**/*.ts"]
      }
    },
    "test": {
      "executor": "@nrwl/jest:jest",
      "outputs": ["coverage/examples/kafka"],
      "options": {
        "jestConfig": "examples/kafka/jest.config.js",
        "passWithNoTests": true
      }
    },
    "docker-compose": {
      "executor": "@nrwl/workspace:run-commands",
      "options": {
        "command": "docker compose up -d",
        "cwd": "examples/kafka"
      }
    }
  },
  "tags": ["example"]
}
